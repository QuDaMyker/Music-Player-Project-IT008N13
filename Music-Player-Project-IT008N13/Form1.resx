<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>